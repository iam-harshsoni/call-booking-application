---
# Source: my-app/charts/admin-api/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: admin-api-secrets-release-name
  namespace: admin
  labels:
    app: admin-api
    module: admin
    env: dev
data:
   connectionstring: bW9uZ29kYjovL21vbmdvYWRtaW46c2VjcmV0QG1vbmdvLWRiLXN2Yy5kYXRhYmFzZS5zdmMuY2x1c3Rlci5sb2NhbC8/cmV0cnlXcml0ZXM9dHJ1ZSZ3PW1ham9yaXR5Cg==
type: Opaque
---
# Source: my-app/charts/db/templates/secret.yaml
#secrets.yml
apiVersion: v1
kind: Secret
metadata:
  name: mongo-db-secrets-release-name  # Ensure space before include
  namespace: database  # Correct namespace key
  
  labels:
    app: mongo-db
    module: database
    env: dev
type: Opaque
data:
  dbuser: bW9uZ29hZG1pbg==
  dbpass: c2VjcmV0
---
# Source: my-app/charts/user-api/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: user-api-secrets-release-name
  #user-api
  namespace: user
  labels:
    app: user-api
    module: user
    env: dev
type: Opaque
data:
  connectionstring: bW9uZ29kYjovL21vbmdvYWRtaW46c2VjcmV0QG1vbmdvLWRiLXN2Yy5kYXRhYmFzZS5zdmMuY2x1c3Rlci5sb2NhbC8/cmV0cnlXcml0ZXM9dHJ1ZSZ3PW1ham9yaXR5Cg==
---
# Source: my-app/charts/admin-ui/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: admin-ui-cm-release-name
  namespace: admin
  labels:
    app: admin-ui
    module: admin
    env: dev
data:
  .env: |
      REACT_APP_API_URL= http://localhost:1026
---
# Source: my-app/charts/user-api/templates/configmap.yaml
#configmap.yml
apiVersion: v1
kind: ConfigMap
metadata:
  name: user-api-cm-release-name
  namespace: user
  labels:
    app: user-api
    module: user
    env: dev
data:
  email: harshsoni6011@gmail.com
---
# Source: my-app/charts/user-ui/templates/configmap.yaml
#configmap.yml
apiVersion: v1
kind: ConfigMap
metadata:
  name: user-ui-cm-release-name
  namespace: user #namespace
  labels:
    app: user-ui
    module: user
    #env: dev
    env: dev #labels
data:
  .env: |
      REACT_APP_API_URL= http://localhost:1025
---
# Source: my-app/charts/admin-api/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: admin-api-svc
  namespace: admin
  labels:
    app: admin-api
    module: admin
    env: dev
spec:
  type: NodePort
  selector:
    app: admin-api
  ports:
  - port: 1026
    targetPort: 1026
    nodePort: 32003
---
# Source: my-app/charts/admin-ui/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: admin-ui-svc
  namespace: admin
  labels:
    app: admin-ui
    module: admin
    env: dev
spec:
  type: NodePort
  selector:
    app: admin-ui
  ports:
  - port: 3001
    targetPort: 3000
---
# Source: my-app/charts/db/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: mongo-db-svc  # Ensure space before include
  namespace: database  # Correct namespace key
  labels:
    app: mongo-db
    module: database
    env: dev
spec:
  selector:
    app: mongo-db
  ports:
  - port: 27017
    targetPort: dbport
---
# Source: my-app/charts/user-api/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: user-api-svc
  namespace: user
  labels:
    app: user-api
    module: user
    env: dev
spec:
  type: NodePort
  selector:
    app: user-api
    module: user
    env: dev
  ports:
  - port: 1025
    targetPort: 1025
    nodePort: 32004
---
# Source: my-app/charts/user-ui/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: user-ui-svc
  namespace: user #namespace
  labels:
    app: user-ui
    module: user
    #env: dev
    env: dev
spec:
  type: NodePort
  selector:
    app: user-ui
  ports:
  - port: 3000
    targetPort: 3000
    nodePort: 32005
---
# Source: my-app/charts/admin-api/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: 1-release-name
  namespace: admin
  labels:
    app: admin-api
    module: admin
    env: dev
spec:
  replicas: 1
  selector:
    matchLabels:
      app: admin-api
  template:
    metadata:
      labels:
        app: admin-api
        module: admin
        env: dev
    spec:
      containers:
      - name: admin-api
        image: harshsoni777/admin-api:v1
        resources:
          limits:
            cpu: 500m
            memory: 2Gi
          requests:
            cpu: 250m
            memory: 1Gi
        ports:
        - containerPort: 1026
          name: http
        env:
          - name: MONGO_URL
            valueFrom:
              secretKeyRef:
                name: admin-api-secrets-release-name
                key:  connectionstring
          - name: PORT
            value: "1026"
        livenessProbe:
          httpGet:
            path: /api/health 
            port: 1026
          initialDelaySeconds: 90
          timeoutSeconds: 10
        readinessProbe:
          httpGet:
            path: /api/health
            port: 1026
          initialDelaySeconds: 30
          timeoutSeconds: 10
---
# Source: my-app/charts/admin-ui/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: admin-ui-release-name
  namespace: admin
  labels:
    app: admin-ui
    module: admin
    env: dev
spec:
  replicas: 1
  selector:
    matchLabels:
      app: admin-ui
  template:
    metadata:
      labels:
        app: admin-ui
        module: admin
        env: dev
    spec:
      containers:
      - name: admin-ui
        image: harshsoni777/admin-ui:v1
        resources:
          limits:
            cpu: 500m
            memory: 2Gi
          requests:
            cpu: 250m
            memory: 1Gi
        ports:
        - containerPort: 3000
        volumeMounts:
        - name:  admin-ui-vi
          mountPath:  /app/.env
          subPath: .env
        # livenessProbe:
        #   httpGet:
        #     path: /health 
        #     port: 3000
        #   initialDelaySeconds: 90
        #   timeoutSeconds: 10
        # readinessProbe:
        #   httpGet:
        #     path: /health
        #     port: 3000
        #   initialDelaySeconds: 30
        #   timeoutSeconds: 10
      volumes:
      - name:  admin-ui-vi
        configMap:
          name: admin-ui-cm-release-name
---
# Source: my-app/charts/user-api/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: user-api-release-name
  namespace: user
  labels:
    app: user-api
    module: user
    env: dev
spec:
  replicas: 1
  selector:
    matchLabels:
      app: user-api
      module: user
      env: dev
  template:
    metadata:
      labels:
        app: user-api
        module: user
        env: dev
    spec:
      containers:
      - name: user-api
        image: harshsoni777/user-api:v1
        resources:
          limits:
            cpu: 500m
            memory: 2Gi
          requests:
            cpu: 250m
            memory: 1Gi
        ports:
        - containerPort: 1025
          name: http
        env:
        - name:  MONGO_URL
          valueFrom:
            secretKeyRef:
              name: user-api-secrets-release-name
              key: connectionstring
        - name: PORT
          value: "1025"
        - name: ADMIN_EMAIL
          valueFrom:
            configMapKeyRef:
              name: user-api-cm-release-name
              key: email
        livenessProbe:
          httpGet:
            path: /api/health
            port: 1025
          initialDelaySeconds: 90
          timeoutSeconds: 10
        readinessProbe:
          httpGet:
            path: /api/health
            port: 1025
          initialDelaySeconds: 30
          timeoutSeconds: 10
---
# Source: my-app/charts/user-ui/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: user-ui-release-name
  namespace: user #namespace
  labels:
    app: user-ui
    module: user
    #env: dev
    env: dev #labels
spec:
  replicas: 1 #replics
  selector:
    matchLabels:
      app: user-ui
  template:
    metadata:
      labels:
        app: user-ui
        module: user
        #env: dev
        env: dev #labels
    spec:
      containers:
      - name: user-ui
        image: harshsoni777/user-ui:v1 #ContainerImage
        resources:
          limits:
            cpu: 500m
            memory: 2Gi
          requests:
            cpu: 250m
            memory: 1Gi #resourceQuota
        ports:
        - containerPort: 3000
        # livenessProbe:
        #   httpGet:
        #     path: /health
        #     port: 3000
        #   initialDelaySeconds: 30
        #   timeoutSeconds: 5
        #   failureThreshold: 5
        # readinessProbe:
        #   httpGet:
        #     path: /health
        #     port: 3000
        #   initialDelaySeconds: 30
        #   timeoutSeconds: 10
        volumeMounts:
        - name:  user-ui-vi
          mountPath:  /app/.env
          subPath: .env
      volumes:
      - name:  user-ui-vi
        configMap:
          name: user-ui-cm-release-name
---
# Source: my-app/charts/db/templates/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongo-db-release-name
  namespace: database  # Correct namespace key
  labels:
    app: mongo-db
    module: database
    env: dev
spec:
  selector:
    matchLabels:
      app: mongo-db # has to match .spec.template.metadata.labels
  serviceName: mongo-db-svc
  replicas: 1 # by default is 1
  minReadySeconds: 10 # by default is 0
  template:
    metadata:
      labels:
        #app: mongo-db # has to match .spec.selector.matchLabels
        app: mongo-db
        module: database
        env: dev
    spec:
      terminationGracePeriodSeconds: 10
      containers:
      - name: mongo-db
        image: mongo
        ports:
        - containerPort: 27017
          name: dbport

        env:
        - name: MONGO_INITDB_ROOT_USERNAME
          valueFrom:
            secretKeyRef:
              name: mongo-db-secrets-release-name
              key: dbuser

        - name: MONGO_INITDB_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mongo-db-secrets-release-name
              key: dbpass
        
        resources:
          limits:
            cpu: 1500m
            memory: 8Gi
          requests:
            cpu: 1000m
            memory: 2Gi

        readinessProbe:
          tcpSocket:
            port: 27017
          initialDelaySeconds: 60
          timeoutSeconds: 10
          periodSeconds: 5
        livenessProbe:
          exec:
            command:
              - mongo
              - --eval
              - db.adminCommand('ping')
          initialDelaySeconds: 60
          timeoutSeconds: 10
          periodSeconds: 5
          
      #   volumeMounts:
      #   - name: my-data
      #     mountPath: /data/db
      # volumes:
      #   - name:  my-data
      #     persistentVolumeClaim:
      #       claimName: mongo-db-pvc
